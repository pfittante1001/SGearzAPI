// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGearzAPI.API.Data;

namespace SGearzAPI.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190306203128_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("SGearzAPI.API.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.CustAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int>("CustomerID");

                    b.Property<bool>("IsBilling");

                    b.Property<bool>("IsShipping");

                    b.Property<string>("State");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("CustAddress");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Chest");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<char>("Gender");

                    b.Property<double>("Height");

                    b.Property<double>("Hip");

                    b.Property<string>("LastName");

                    b.Property<int>("Neck");

                    b.Property<string>("Phone");

                    b.Property<double>("Shoulders");

                    b.Property<double>("Sleeve");

                    b.Property<int>("UserID");

                    b.Property<double>("Waist");

                    b.HasKey("Id");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("OderDate");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryID");

                    b.Property<DateTime>("DateListed");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("ProductDesc");

                    b.Property<string>("ProductName");

                    b.Property<int>("SupplierID");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Image");

                    b.Property<string>("ImageName");

                    b.Property<bool>("IsMain");

                    b.Property<int>("ProductID");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SupplierName");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.SupplierAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<bool>("IsMain");

                    b.Property<string>("State");

                    b.Property<int?>("SupplierId");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierAddress");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SGearzAPI.API.Model.CustAddress", b =>
                {
                    b.HasOne("SGearzAPI.API.Model.Customer", "Customer")
                        .WithMany("CustAddresses")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGearzAPI.API.Model.Customer", b =>
                {
                    b.HasOne("SGearzAPI.API.Model.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("SGearzAPI.API.Model.Customer", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGearzAPI.API.Model.Product", b =>
                {
                    b.HasOne("SGearzAPI.API.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGearzAPI.API.Model.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGearzAPI.API.Model.ProductImage", b =>
                {
                    b.HasOne("SGearzAPI.API.Model.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGearzAPI.API.Model.SupplierAddress", b =>
                {
                    b.HasOne("SGearzAPI.API.Model.Supplier")
                        .WithMany("SupplierAddress")
                        .HasForeignKey("SupplierId");
                });
#pragma warning restore 612, 618
        }
    }
}
